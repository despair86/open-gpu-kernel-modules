#
# Test whether certain compiler flags are supported,
# and add them to CFLAGS if so.
#
define ADD_OPTIONAL_CFLAG
  _supported != \
    if $$(CC) -o /dev/null -c -x c /dev/null $(1) > /dev/null 2>&1; \
    then echo "y"; fi
  ifeq ($$(_supported),y)
    override CFLAGS += $(1)
  endif
endef

#
# -Werror=undef: treat undefined preprocessor identifiers as errors.
# Added in GCC 4.2.0.
#
$(eval $(call ADD_OPTIONAL_CFLAG,-Werror=undef))

#
# GCC 7.3.0 generates code which uses SIMD instructions. The Solaris
# kernel does not handle these instructions resulting into kernel panic
# at run time. The GCC switches -mno-mmx et al make sure that SIMD
# instructions are not generated by GCC. Based on availability of
# these switches, we set these to avoid run time crashes.
#
$(eval $(call ADD_OPTIONAL_CFLAG,-mno-mmx))
$(eval $(call ADD_OPTIONAL_CFLAG,-mno-sse))
$(eval $(call ADD_OPTIONAL_CFLAG,-mno-sse2))
$(eval $(call ADD_OPTIONAL_CFLAG,-mno-3dnow))
